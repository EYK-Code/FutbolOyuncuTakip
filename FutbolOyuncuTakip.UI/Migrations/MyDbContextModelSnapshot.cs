// <auto-generated />
using FutbolOyuncuTakip.UI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FutbolOyuncuTakip.UI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FutbolOyuncuTakip.UI.Models.Futbolcu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mevki")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TakimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TakimId");

                    b.ToTable("Futbolcu");
                });

            modelBuilder.Entity("FutbolOyuncuTakip.UI.Models.Lig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lig");
                });

            modelBuilder.Entity("FutbolOyuncuTakip.UI.Models.Takim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LigId");

                    b.ToTable("Takim");
                });

            modelBuilder.Entity("FutbolOyuncuTakip.UI.Models.Futbolcu", b =>
                {
                    b.HasOne("FutbolOyuncuTakip.UI.Models.Takim", "Takim")
                        .WithMany("Futbolcular")
                        .HasForeignKey("TakimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Takim");
                });

            modelBuilder.Entity("FutbolOyuncuTakip.UI.Models.Takim", b =>
                {
                    b.HasOne("FutbolOyuncuTakip.UI.Models.Lig", "Lig")
                        .WithMany("Takimlar")
                        .HasForeignKey("LigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lig");
                });

            modelBuilder.Entity("FutbolOyuncuTakip.UI.Models.Lig", b =>
                {
                    b.Navigation("Takimlar");
                });

            modelBuilder.Entity("FutbolOyuncuTakip.UI.Models.Takim", b =>
                {
                    b.Navigation("Futbolcular");
                });
#pragma warning restore 612, 618
        }
    }
}
